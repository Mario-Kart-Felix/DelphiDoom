DelphiDoom (OpenGL renderer) surrports the following model formats:
- MD2 (Quake Models)
- DDMODEL (DelphiDoom procedure model) 
- DMX (DelphiDoom compiled procedure model)

Examples:
  MD2 Models  -> https://sourceforge.net/projects/delphidoom/files/Tools%2C%20maps%20and%20examples/DOOM-MODELS.pk3/download
  DDMODEL/DMX -> https://sourceforge.net/projects/delphidoom/files/Tools%2C%20maps%20and%20examples/v2_EXAMPLE_08_DD_MODEL.zip/download

DDMODEL & DMX models can be created with the DD_MODEL tool (https://sourceforge.net/projects/delphidoom-procedural-modeler/) 
They are supported from version 2.0.3 build 706 and up.

Model support for DelphiDoom is supported via MODELDEF lump, or MODEFDEF.txt files inside external pk3 or pak files.

Example of a MODELDEF lump


// ------------------------------------------------------
// DELPHIDOOM MODEL DEFINITION FILE
// ------------------------------------------------------

// ------------------------------------------------------
// SPIDER MASTERMIND
// ------------------------------------------------------


// ------------------------------------------------------

// Model definition, we use the modeldef keyword
// 'framemerge' keyword: Merge frames from another model for smooth movement. 
// MD2 models can be merged only with other MD2 models with the exact same number of triangles
// DDMODEL & DMX models can be merged only with DDMODEL & DMX models
// modeldef keyword is required only when we must define offset[], scale[] and framemerge keywords.
// if modedef keyword is missing then the default values for offset is 0.0, scale is 1.0
modeldef "spider_base.md2" 
{
  xoffset 0.0
  yoffset 0.0
  zoffset 0.0
  xscale 1.0
  yscale 1.0
  zscale 1.0
  framemerge "spider_attack.md2"
}

// State definition
// Standard state names are defined inside STATEDEF lump inside doom32.swd (DelphiDoom system wad)
// In custom actors are defined as S_xxx_999, where XXX is the new mobj name and 999 is the state number of the mobj starting from 0
// 'model' keyword points to the md2 filename, if not present a previous modeldef definition the default values will be used (offset = 0.0, scale = 1.0)
// 'texture' keyword points to the external texture filename for this frame
// 'frame' keyword point to the model frame anmation for the state
// 'transparency' keyword (range [0.0 - 1.0]) is the texture transparency for the current state, default is 1.0 (not transparent).
state S_SPID_STND
{
  model "spider_base.md2"
  texture "spider_base.png"
  frame 0
}

