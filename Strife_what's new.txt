Added VSpeed and PushFactor fields to the mobjinfo PascalScript runtime class.
New ACTORDEF functions:
  A_Recoil
  A_SetSolid
  A_UnSetSolid
  A_SetFloat
  A_UnSetFloat
  A_SetHealth
  A_ResetTargetHealth
  A_SetTargetHealth
Small fixes to the menu.
Corrected dehacked export bug in deh_savetofile console command (didn't add the pushfactor keyword)
Corrected bug in slidedoor save/load
Mouse sensitivity for X & Y mouses axis can be configured thru the menus (Controls/Mouse sensitivity).
Added option for textured menu background.
Added menubackgroundflat console variable.
In multithreading mode the visplanes initialization is done in a separate thread while running the logic to improve performance (software renderer).
Added -keyboardmode command line parameter. Usage is: 
  1) "-keyboardmode ARROWS" -> use arrows to navigate
  2) "-keyboardmode WASD" -> use WASD to navigate
  3) "-keyboardmode ESDF" -> use ESDF to navigate
Key bindings menu to customize keyboard player control.
Menu beutificiations.
Support for DOOMWADPATH & STRIFEWADPATH enviroment variables.
Search for installed steam applications to find wad files.
Openings are dynamically allocated, depending on screen resolution.
Added startcast console command. 
Screen resolution can be changed from the menu.
Intermission screens are displayed with correct aspect ratio when the "widescreensupport" console variable is set to true.
Automap fixes: 
 -Marks are displayed correctly. 
 -In OpenGL mode uses hardware acceleration to draw the automap instead of using the same code with software rendering version.
 -Fixed automap grid rotation.
 -Added automapgrid console variable.
Support for the C-style #include and Pascal-style {$INCLUDE} directives inside all content definition lumps (ACTORDEF, MODELDEF, VOXELDEF?, LIGHTDEF & SNDINFO). Recoursive include calls are not supported. Maximum include depth set to 32.
Added png screenshot format (default). The mirrorjpgsshot console variable is set to false by default. It can be changed from the menu (Options/System)
Fullscreen menu item moved from Options/Display Options/Advanced to Options/Detail/Set Video Mode menu.
Added Ascpect Ratio & Camera menus (Display Options/Advanced).
Fixed bug with string to float convertion when the system's decimal separator was comma.
Will recognize the '+CANPASS' alias for 'PASSMOBJ' flag in ACTORDEF definitions (as well as 'CANPASS').
Will load kvx voxels from pk3/zip/pak files without the kvx extention, if they are placed inside voxels\*. directory
Corrected the behaviour of Actordef keyword "replaces".
In ACTORDEF lumps when a flag specified with the "-" character, it will remove the flag (usefull with inherited objects)
"Funny rotations" generate an I_Warning, not an I_Error.
When entering ENDOOM screen, stops the music.
ENDSTRF screen in OpenGL branch.
Wipe effect in OpenGL branch.
Support for renderstyle ADD & renderstyle SUBTRACT in ACTOR definitions.
Added new flag MF2_EX_SEEINVISIBLE, when set allows monsters to clearly see invisible player. 
Added the "ACTORALIAS" ACTORDEF command, defines actor name aliases. Usage is: ACTORALIAS name1 name2.
Added the "DEH_PARSE" & "DEH_PARSE_ALL" ACTORDEF commands, will parse the specified dehacked/bex file. Usage is DEH_PARSE/DEH_PARSE_ALL file1 [file2 ....].
Added new actor flag MF2_EX_MISSILEHURTSPECIES, when set, the actor can hurt with missile attack actors of the same species.
Added showmessageboxonmodified console variable. When set to true and a modified game is detected, there will be displayed a messagebox. Default is FALSE.
Added DEH_SaveMobjInfoCSV console command. Save the current mobjinfo table in a csv file.

Version 2.0.4 build 720 - (12/10/2019)
-----------------------
Now recornizes kvx voxels inside the VX_START/VX_END namespace.
Added vox_exportlightmap console command (OpenGL version only). Exports the current lightmap into a ddvox voxel.
Limit OpenGL framerate to monitor refresh rate is now preserved and executed right from defaults.
Lower memory utilization for OpenGL renderer (visplane declaration does not include the unneeded for the gl renderer visindex arrays).
Added support for slab6 VOX voxels.
Added pushfactor mobjinfo field. It determines how much a PUSHABLE mobj can be pushed. Default is FRACUNIT div 4 (25% of pusher speed)
Added PS_GetMobjInfoPushFactor PascalScript function. Returns the PushFactor of mobjinfo.
Parse SNDINFO & SNDINFO.txt entries from PK3 files.
Fixes to SNDINFO parsing.
A_Jump* mobjinfo functions will check if parameter is a label and jump to it. 
We can now define interval for THINKERs inside ACTORDEF lumps.
We can use PG_UP & PG_DOWN keys in the console to view the previous messages.
Added A_RandomGoto & A_ResetHealth ACTORDEF functions.

Version 2.0.4 build 719 - (19/9/2019)
-------------
OpenGL models rendered from external DLL.
Removed the "Draw sky" command from the OpenGL menu. (gl_drawsky console variable still exists)
External PNG textures fixes and loading optimization - fixed problems with later DHTP.
ZLib updated to version 1.2.8
Allow comments (//) inside PK3ENTRY lump.
Corrected problem with trailing spaces inside PK3ENTRY lump.
Small corrections to r_sprites.pas
ACTORDEF functions parameters appear to the DD_IDE tool.
Fake 3d is off by default.
Better support for dehacked strings.
When the -dontsavedefaults is passed to the command line parameters, the defaults file (Strife32.ini) will not be saved.

Version 2.0.4 build 718 - (13/10/2018)
-------------
Paraller vissprite sorting using separate thread.
Fixed rare bug that could crash the engine. The error could occur if multithreading mode was enabled and total spans had never exceeded the number of active threads for flat drawing.

Version 2.0.4 build 717 - (20/9/2018)
-------------
CODEPTR keyword in BEX files will recornize ACTORDEF actions with custom parameters.
Fixed bug in A_SubtractCustomParam and A_SubtractTargetCustomParam ACTORDEF functions.
ACTORDEF functions can now access mobj custom params using the appropriate keywords:
  -CustomParam
  -TargetCustomParam
R_SortVisSprites now uses radix sort algorithm when we have more than 1024 vissprites for better performance.
Use multiple cpu cores for HUD drawing.

Version 2.0.4 build 716 - (21/2/2018)
-------------
Added PROJECTILE keyword in ACTORDEF content. It sets the MF_NOGRAVITY MF_DROPOFF and MF_MISSILE flags on.
Added new ACTORDEF functions to control PASCALSCRIPT world and map variables:
  -A_SetMapStr
  -A_SetWorldStr
  -A_SetMapInt
  -A_SetWorldInt
  -A_SetMapFloat
  -A_SetWorldFloat
ACTORDEF functions can now access world and map variables using the appropriate keywords:
  -MapStr (for map string variables)
  -MapInt (for map integer variables)
  -MapFloat (for map float variables)
  -WorldStr (for world string variables)
  -WorldInt (for world integer variables)
  -WorldFloat (for world float variables)

Version 2.0.4 build 715 - (18/2/2018)
-------------
Corrected demo recording bug. Problem was more likely appeared in version 2.0.3.704.
16 and 32 angles in sprites.
Midi files will not freeze the game input when restarted.
Volume control now works in midi files.
Midi files playback will pause when the game is paused (pause key pressed).
MP3 files playback will pause when the game is paused (pause key pressed).
Will not spawn terrain splashes in case of a bridge of self referencing sectors.
Will read PNG sprites inside WADs, support for "grAb" PNG chunk to determine offsets.
Will also read BMP (bitmaps) sprites inside WADs. 

Version 2.0.4 build 714 - (22/1/2018)
-----------
Interpolate sector flag can be controled within PascalScript.
Fixed accuracy of status bar drawing in 8 bit display mode.
Hires lookup tables are calculated using multiple threads if possible.
New icon, that resembles an ancient temple of Delphi archaeological site.
If infinite state cycles detected will exit with I_Error.
Small fixes to the fake3d effect.

Version 2.0.4 build 713 - (12/1/2018)
-----------
Menu beautifications.
Option to switch to ESDF keyboard movement.
Added keyboardmovemode console command.
Now correctly executes console commands on AUTOEXEC lump.
Speed optimizations to the software renderer on maps with big number of drawsegs. (using multiple lists of drawsegs).
Fixed small issues with the multithreaded dephbuffer calculation.

Version 2.0.4 build 712 - (1/1/2018)
-----------
Corrections to the screen DPI detection.
Doombuilder configuration files are distributed with the binaries.

Version 2.0.4 build 711 - (31/12/2017)
-----------
Fixes to sky drawing (both software and OpenGL mode).
Corrected z-fighting between corpse and dropped item (software renderer).
Multithreading depthbuffer calculation for the software renderer.
Multiple threads for spans drawing.
Multithreading performance improvements in computers with 4 or more CPU threads (software renderer). 
Screen DPI awareness when running in Windows 8.1 or greater.

Version 2.0.4 build 710 - (23/12/2017)
-----------
Automatically unset the TWO-SIDED flag for lines without backsector.
Speed optimizations in things rendering (software renderer).

Version 2.0.4 build 708 - (21/12/2017)
-----------
Mobjs do not slip while descenting a slopped floor.
Added line special 283, mobjs on tagged sectors will slip if descenting a slope.
Added "Gravity" sector field (controlled by PascalScript).
Added GetSectorGravity & SetSectorGravity PascalScript functions
Added RippleFloor, RippleCeiling and Gravity properties for PascalScript !TSector class.
Added MF2_EX_CANTLEAVEFLOORPIC mobj flag.
Added MF2_EX_JUMPDOWN mobj flag. 
Added MF2_EX_FULLVOLACTIVE MF2_EX_FULLVOLDEATH MF2_EX_FULLVOLSEE MF2_EX_FULLVOLPAIN MF2_EX_FULLVOLATTACK mobj flags
Added GameMap() PascalScript function.
Added GetConsoleStr(), GetConsoleInt() and GetConsoleBool() PascalScript functions.
Corrected glitches when rendering the dynamic lightmap (OpenGL renderer).
Corrected glitches when rendering transparent middle textures (OpenGL renderer).
Corrected T_FireFlicker savegame bug (https://doomwiki.org/wiki/Sector_type_17_is_disabled_after_loading_a_saved_game)
High resolution patches inside HI_START/HI_END namespace (OpenGL renderer).
Presice rw_distance and rw_offset calculation (https://www.doomworld.com/forum/topic/70288-dynamic-wiggletall-sector-fix-for-fixed-point-software-renderer/?do=findComment&comment=1340433)
Visplanes with the same texture now match up far better than before (https://www.doomworld.com/forum/topic/70288-dynamic-wiggletall-sector-fix-for-fixed-point-software-renderer/?do=findComment&comment=1342176)
R_PointToAngle function in rendering replaced with a floating point equivelant to eliminate glitches in huge maps.
Fixed the "Incomplete healing from Gerard" bug (https://doomwiki.org/wiki/Incomplete_healing_from_Gerard). (The bug will intentionally reproduced if playing an old demo).
Precalculated finesine and finecosine tables replaced with larger and more accurate equivelants (rendering only - not logic).
Fixed bug that did not recornize correctly the MF2_EX_NODAMAGE, MF2_EX_DONTRUNSCRIPTS, MF2_EX_PRECISESPAWNANGLE & MF2_EX_CUSTOMDROPITEM mobj flags.
Added MF2_EX_DONOTRENDERSHADOW mobj flags, when set the mobj do not cast shadow (OpenGL renderer).
Speed optimizations for the software renderer.
Fixed tutti frutti bug for short textures.

Version 2.0.3 build 707 - (12/12/2017)
-----------
Fixed full screen title drawing problem when the width resolution was 1920 or 2560.

Version 2.0.3 build 706 - (18/11/2017)
-----------
Added new model formats (ddmodel & dmx) for the OpenGL version. These formats can be created with the DD_MODEL tool (https://sourceforge.net/projects/delphidoom-procedural-modeler/).

Version 2.0.3 build 705 - (7/11/2017)
-----------
Fixed music pitch problem (as mentioned by RTC_Marine at https://www.doomworld.com/forum/topic/92113-delphidoom-20/?do=findComment&comment=1700485)
Hud drawing speed optimizations in 2560 x 1440 & 3840 x 2160 resolutions.

Version 2.0.3 build 704 - (29/10/2017)
-----------
PascalScript can now access DLLs from inside pk3 files. (or WAD files if using PK3ENTRY lump)
Smooth freelooking. Now the engine does not ignore the slight variations in mouse movement (as suggested by  RTC_Marine - https://www.doomworld.com/forum/topic/92113-delphidoom-20/?do=findComment&comment=1700485) 
Internal save/load version updated to version 2.03.
Added gl_no_glfinish_hack console variable to avoid with OpenGL slowdown on systems with Intel HD4000 and Windows 10 (default is True).
Will load configuration file (strife32.ini) of previous versions.

Version 2.0.2 build 703 - (17/10/2017)
-----------
Added PCX image external texture support.
A_Gotoxxxxx functions evaluate small expresions in state parameter (addition & substraction of a constant value).
Added AllMissiles method to "Actors" PascalScript variable.
Added mobj functions to control flow depending on map & world variables:
 - A_JumpIfMapStringEqual
 - A_JumpIfMapStringLess
 - A_JumpIfMapStringGreater
 - A_JumpIfMapIntegerEqual
 - A_JumpIfMapIntegerLess
 - A_JumpIfMapIntegerGreater
 - A_JumpIfMapFloatEqual
 - A_JumpIfMapFloatLess
 - A_JumpIfMapFloatGreater
 - A_JumpIfWorldStringEqual
 - A_JumpIfWorldStringLess
 - A_JumpIfWorldStringGreater
 - A_JumpIfWorldIntegerEqual
 - A_JumpIfWorldIntegerLess
 - A_JumpIfWorldIntegerGreater
 - A_JumpIfWorldFloatEqual
 - A_JumpIfWorldFloatLess
 - A_JumpIfWorldFloatGreater
 - A_GoToIfMapStringEqual
 - A_GoToIfMapStringLess
 - A_GoToIfMapStringGreater
 - A_GoToIfMapIntegerEqual
 - A_GoToIfMapIntegerLess
 - A_GoToIfMapIntegerGreater
 - A_GoToIfMapFloatEqual
 - A_GoToIfMapFloatLess
 - A_GoToIfMapFloatGreater
 - A_GoToIfWorldStringEqual
 - A_GoToIfWorldStringLess
 - A_GoToIfWorldStringGreater
 - A_GoToIfWorldIntegerEqual
 - A_GoToIfWorldIntegerLess
 - A_GoToIfWorldIntegerGreater
 - A_GoToIfWorldFloatEqual
 - A_GoToIfWorldFloatLess
 - A_GoToIfWorldFloatGreater
Support for 'TEXTURE3' texture lump.
Added PascalScript function "IsPrime()".
Builds map nodes if missing.

Version 2.0.2 build 702 - (30/8/2017)
-----------
Fixed alpha channel in TGA screenshots.
Added keepsavegamename console variable, when true (default) you do not have to re-ender the save game name when overwritting saves.
The mouse sensitivity slider within menus can accept values up to 20.

Version 2.0.1 build 701 - (28/12/2016)
-----------
Fixed some glitches of the overlay drawer when screenblocks < 10.
New PascalScript functions, mostly for retrieving information about mobjinfo.

Version 2.0.1 build 700 - (22/12/2016)
-----------
Places screenshots inside data\screenshots folder.
Mirror screenshot to jpg format.
General purpose multithreading utilities will use more than 2 logical CPUs if available.
Sound precaching discarted. (was causing problems with memory managment)
Added -cgaX3 command line parameter, starts at 960X600 resolution.
SpawnMobj console command also gets angle as parameter.
Support for V5 glnodes. 
Added support for V5 glnodes.
Visplane hash. 
Added -geom command line parameter. e.g. -geom 800x600
Added TNTHOM and HOM console commands, to enable/disable HOM detection. (software renderer only)
Added compile, compilescript & pscomp console commands, compiles pss script into bytecode (file input, file output).
Added A_RunScript mobj function.
Added A_GhostOn mobj function.
Added A_GhostOff mobj function.
Fixed ACTORDEF parsing. (did not recornize flags_ex field of state_t)
THINKER keyword inside ACTORDEF lumps (runs script).
Added -con command line parameter, executes at loadtime a file containing console commands.
Added halt console command, stops executing without endscreen and without end sound.
Added line special 282, create ladder to tagged sectors.
Saved games contain texture and flat names, no texture and flat numbers (SAVEGAMEVERSION = 122).
Added A_Blocking mobj function.
Added MF2_EX_DONRUNSCRIPTS mobj flag.
Added A_DoNotRunScripts & A_DoRunScripts mobj functions.
Added MF2_EX_PRECISESPAWNANGLE mobj flag. (Use precise spawnangle of mapthing to spawn mobj)
Keep sector renderflags in saved games.
Keep linedef renderflags in saved games.
Support for HI_START & HI_END namespace inside WADs.
Bug fix: Now wall drawing uses correct light level in 32 bit color software rendering mode.
Maximum number of general purpose threads increased to 16.
Added line special 281, create 3d middle floor to tagged sector(s).
More accurate fake3d effect.
Added line specials 386, 387, 388, 389, 390 & 391, create sloped sectors.
Teleport zoom effect.
Added getworldvar & getmapvar console commands. Display pascal script world and map variables.
Added setworldvar & setmapvar console commands. Set pascal script world and map variables.
Will use PK3ENTRY lump inside a wad file to define long filename aliases for other wad lumps.
Added MF2_EX_CUSTOMDROPITEM mobj flag. When set, the specified instance of the mobj drops a cutom dropitem
Added A_SetDropItem & A_SetDefaultDropItem mobj functions.
Added A_TargetDropItem & A_DefaultTargetDropItem mobj functions.
Added overlaydrawtextleft, overlaydrawtextright, overlaydrawtextcenter, overlaydrawpixel and overlayputpixel console commands.
Added A_GlobalEarthQuake mobj function.
Corrected voxel scale in software rendering mode. 

Version 1.1.6 build 605 - (29/8/2016)
-----------
Fixes to the textured automap.

Version 1.1.5 build 600 - (31/12/2015)
-----------
First official release.
